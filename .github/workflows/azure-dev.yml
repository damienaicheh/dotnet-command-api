on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - feat/azd

permissions:
    id-token: write
    contents: read

env:
  ACTIONS_RUNNER_DEBUG: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: pr
      url: ${{ steps.env_info.outputs.app_service_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v0.1.0

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.100'
      
      - name: Login az
        uses: azure/login@v2
        with:
          client-id: ${{ vars.ARM_CLIENT_ID }}
          tenant-id: ${{ vars.ARM_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true
  
      - name: Set az account
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az account set --subscription ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in with Azure
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Provision Infrastructure
        run: |
          azd provision --no-prompt
        env:
          AZURE_ENV_NAME: "pr"
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_ENV_NAME: "pr"
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Update environment Url
        id: env_info
        run: |
          ls
          cd dotnet-command-api/dotnet-command-api/.azure/pr/infra
          APP_SERVICE_URL="$(terraform output -raw APP_SERVICE_URL)"
          echo "app_service_url=$APP_SERVICE_URL" >> $GITHUB_OUTPUT